#!/bin/sh
exec 2>&1
SVCDIR=`pwd`

# Ciphertext data device: /srv/ceph/devices/osd.<%= @options['osd_id'] %>.data.encrypted
# Plaintext data device: /srv/ceph/devices/osd.<%= @options['osd_id'] %>.data
# dmcrypt data device: /dev/mapper/cryptosd.<%= @options['osd_id'] %>.data
# Keyfile for data device: /srv/ceph/dmkey/osd.<%= @options['osd_id'] %>.data
# Ciphertext journal device: /srv/ceph/devices/osd.<%= @options['osd_id'] %>.journal.encrypted
# Plaintext journal device: /srv/ceph/devices/osd.<%= @options['osd_id'] %>.journal
# dmcrypt journal device: /dev/mapper/cryptosd.<%= @options['osd_id'] %>.journal
# Keyfile for journal device: /srv/ceph/dmkey/osd.<%= @options['osd_id'] %>.journal
# Mountpoint: /srv/ceph/osd/<%= @options['osd_id'] %>
# Command: /usr/bin/ceph-osd -i <%= @options['osd_id'] %> --pid-file /var/run/ceph/osd.<%= @options['osd_id'] %>.pid -c /etc/ceph/ceph.conf

# Two failure modes: transient and permanant.  Transient: scream and die (runit will restart). Permanant: call critical_failure (will not restart).

critical_failure() {
  echo ${1}
  echo "Critical Failure called, disabling service!"
  touch $SVCDIR/service/down
  exit 1
}

if [ ! -d /srv/ceph/osd/<%= @options['osd_id'] %> ]; then
  echo "Mountpoint not found, maybe not available yet?"
  exit 2
fi

if [ ! -L /srv/ceph/devices/osd.<%= @options['osd_id'] %>.journal.encrypted ]; then
  critical_failure "Journal symlink missing!"
fi

if [ ! -L /srv/ceph/devices/osd.<%= @options['osd_id'] %>.data.encrypted ]; then
  critical_failure "Data device symlink missing!"
fi

if [ ! -e /dev/mapper/cryptosd.<%= @options['osd_id'] %>.journal ]; then
  cryptsetup luksOpen -d /srv/ceph/dmkey/osd.<%= @options['osd_id'] %>.journal /srv/ceph/devices/osd.<%= @options['osd_id'] %>.journal cryptosd.<%= @options['osd_id'] %>.journal || critical_failure "Unable to decrypt journal device!"
fi

if [ ! -e /dev/mapper/cryptosd.<%= @options['osd_id'] %>.data ]; then
  cryptsetup luksOpen -d /srv/ceph/dmkey/osd.<%= @options['osd_id'] %>.data /srv/ceph/devices/osd.<%= @options['osd_id'] %>.data cryptosd.<%= @options['osd_id'] %>.data || critical_failure "Unable to decrypt data device!"
fi

if [ ! -L /srv/ceph/devices/osd.<%= @options['osd_id'] %>.journal ]; then
  critical_failure "Journal symlink missing!"
fi

if [ ! -L /srv/ceph/devices/osd.<%= @options['osd_id'] %>.data ]; then
  critical_failure "Data device symlink missing!"
fi

# Test that the journal is readable
dd if=/srv/ceph/devices/osd.<%= @options['osd_id'] %>.journal of=/dev/null bs=1M count=4 || critical_failure "Unable to read journal!"

# Test if mounted
if [ $(grep /srv/ceph/devices/osd.<%= @options['osd_id'] %>.data /proc/mounts | wc -l) == 0 ]; then
  # Test that the data device is readable
  dd if=/srv/ceph/devices/osd.<%= @options['osd_id'] %>.data of=/dev/null bs=1M count=4 || critical_failure "Unable to read data device!"
  # Mount the filesystem
  mount /srv/ceph/devices/osd.<%= @options['osd_id'] %>.data /srv/ceph/osd/<%= @options['osd_id'] %> -o noatime,nodev,noexec || critical_failure "Unable to mount data device!"
else
  if [ ! -f /srv/ceph/osd/<%= @options['osd_id'] %>/magic ]; then critical_failure "Data device mounted, but not OSD blessed!"; fi
fi

ulimit -n 16384

# Bring up the OSD!
exec /usr/bin/ceph-osd -i <%= @options['osd_id'] %> --pid-file /var/run/ceph/osd.<%= @options['osd_id'] %>.pid -c /etc/ceph/ceph.conf -f